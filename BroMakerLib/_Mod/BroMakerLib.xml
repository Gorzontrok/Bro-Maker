<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BroMakerLib</name>
    </assembly>
    <members>
        <member name="P:BroMakerLib.Abilities.Ability`1.PositionOffset">
            <summary>
            Offset position from <see cref="F:BroMakerLib.Abilities.Ability`1.owner"/>
            </summary>
        </member>
        <member name="T:BroMakerLib.Abilities.CharacterAbility">
            <summary>
            Base class for Ability made for Characters (<see cref="T:TestVanDammeAnim"/>)
            </summary>
        </member>
        <member name="T:BroMakerLib.Abilities.Characters.SpawnDrone">
            <summary>
            Spawn a drone. DON'T USE, drones are bugged and crashes could happen
            </summary>
        </member>
        <member name="T:BroMakerLib.Abilities.Characters.ThrowGrenade">
            <summary>
            Throw a grenade like Rambro special
            </summary>
        </member>
        <member name="T:BroMakerLib.Abilities.Characters.Jetpack">
            <summary>
            Use a Jetpack. Not fully functionnal for some reason
            </summary>
        </member>
        <member name="M:BroMakerLib.BroMaker.CreateMaterialFromFile(System.String)">
            <summary>
            Create a material from a file with a specific shader
            </summary>
            <param name="ImagePath"></param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.BroMaker.CreateMaterialFromFile(System.String,UnityEngine.Shader)">
            <summary>
            Create a material from a file with a specific shader
            </summary>
            <param name="ImagePath"></param>
            <param name="shader"></param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.IsBoss(Unit)">
            <summary>
            Determines if the specified unit is a boss
            </summary>
            <param name="unit">Unit to check</param>
            <returns>True if unit is a boss</returns>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.SetSpecialMaterials(System.Int32,System.Collections.Generic.List{UnityEngine.Material},UnityEngine.Vector2,System.Single)">
            <summary>
            Changes the specified players special materials
            </summary>
            <param name="playerNum"></param>
            <param name="specialMaterials">List of materials to set special to, if only one is specified, all icons will be set to it</param>
            <param name="offset">Offset to move all special icons horizontally or vertically</param>
            <param name="spacing">Spacing between special icons</param>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.SetSpecialMaterials(System.Int32,UnityEngine.Material,UnityEngine.Vector2,System.Single)">
            <summary>
            Changes the specified players special materials
            </summary>
            <param name="playerNum"></param>
            <param name="specialMaterial">Material to set special to, all icons will be set to it</param>
            <param name="offset">Offset to move all special icons horizontally or vertically</param>
            <param name="spacing">Spacing between special icons</param>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.CreateGibPrefab(System.String,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector3,UnityEngine.Vector3,System.Boolean,DoodadGibsType,System.Single,System.Boolean,BloodColor,System.Single,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,UnityEngine.AudioClip[],System.Boolean)">
            <summary>
            Creates a Gib prefab. Be sure the Gib Holder is set to inactive or else your gibs will be destroyed.
            </summary>
            <param name="name">Name of GameObject</param>
            <param name="lowerLeftPixel">Lower left pixel of gib</param>
            <param name="pixelDimensions">Width and Height of gib</param>
            <param name="spriteWidth"></param>
            <param name="spriteHeight"></param>
            <param name="spriteOffset"></param>
            <param name="localPositionOffset">Sets the local position of the object which is applied as an offset to the spawn position</param>
            <param name="doesRotate"></param>
            <param name="gibType"></param>
            <param name="size"></param>
            <param name="hasBloodTrail"></param>
            <param name="color"></param>
            <param name="bloodyM"></param>
            <param name="shrink"></param>
            <param name="rotateFrames"></param>
            <param name="rotateAtRightAngles"></param>
            <param name="hasSmokeTrail"></param>
            <param name="smokeTrailBounces"></param>
            <param name="forceMultiplier"></param>
            <param name="startLife"></param>
            <param name="lifeM"></param>
            <param name="randomLifeM"></param>
            <param name="r"></param>
            <param name="rotationSpeedMultiplier"></param>
            <param name="bounceM"></param>
            <param name="frictionM"></param>
            <param name="drag"></param>
            <param name="randomiseGravityM"></param>
            <param name="gravityMrandomRange"></param>
            <param name="fallHitSound"></param>
            <param name="isOnFire"></param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.SpawnGrenade(Grenade)">
            <summary>
            Throw grenade and handle direction if characters crouching
            </summary>
            <param name="grenade"></param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.UIOptions">
            <summary>
            Override this method to have UI options displayed for your custom hero underneath their name in the Custom Bros tab
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.HarmonyPatches(HarmonyLib.Harmony)">
            <summary>
            Override this method to add custom harmony patches to your custom hero
            </summary>
            <param name="harmony"></param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.PreloadAssets">
            <summary>
            Override this method to add your own assets to be preloaded when the game starts, to avoid lag when spawning as custom characters.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.PreloadSprites(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Preloads each sprite in the spritePaths list.
            </summary>
            <param name="directoryPath">Path to the directory containing the sprites</param>
            <param name="spritePaths">Sprites to load</param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.PreloadSounds(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Preloads each sound in the soundPaths list.
            </summary>
            <param name="directoryPath">Path to the directory containing the sound files</param>
            <param name="soundPaths">Sounds to load</param>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.AssignNullVariables(BroMakerLib.CustomObjects.ICustomHero,BroBase)">
            <summary>
            Before base.Awake()
            </summary>
            <param name="hero"></param>
            <param name="character"></param>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.FixOtherComponentValues(BroMakerLib.CustomObjects.ICustomHero)">
            <summary>
            Before Awake
            </summary>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.GetTheOtherBroBaseComponent(BroMakerLib.CustomObjects.ICustomHero)">
            <summary>
            Before Awake
            </summary>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.SetupCustomHero(BroMakerLib.CustomObjects.ICustomHero)">
            <summary>
            Before Awake
            </summary>
            <param name="hero"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="F:BroMakerLib.Infos.CustomBroforceObjectInfo.name">
            <summary>
            Name of the Custom Object
            </summary>
        </member>
        <member name="M:BroMakerLib.PresetManager.GetHeroPreset(System.String)">
            <summary>
            Return hero Preset
            </summary>
            <param name="presetName"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:BroMakerLib.ResourcesController.Particle_AlphaBlend">
            <summary>
            Particles/Alpha Blended
            </summary>
        </member>
        <member name="P:BroMakerLib.ResourcesController.Unlit_DepthCutout">
            <summary>
            Unlit/Depth Cutout With ColouredImage
            </summary>
        </member>
        <member name="P:BroMakerLib.ResourcesController.Particle">
            <summary>
            Particle/Additive
            </summary>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetMaterial(System.String,System.String)">
            <summary>
            Creates a Material using the shader Unlit_DepthCutout.
            Loads Material from cache if created previously.
            </summary>
            <param name="path">Path to an image or asset</param>
            /// <param name="fileName">Name of an image or asset file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetMaterial(System.String)">
            <summary>
            Creates a Material using the shader Unlit_DepthCutout.
            Loads Material from cache if created previously.
            </summary>
            <param name="filePath">Path to an image or asset file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateMaterial(System.Byte[])">
            <summary>
            Creates a Material from an array of bytes using the shader Unlit_DepthCutout.
            The Material is not cached, use GetMaterial if caching is desired.
            </summary>
            <param name="imageBytes">Byte array to load image from</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateMaterial(System.String,UnityEngine.Shader)">
            <summary>
            Creates a Material using the specified image and shader.
            The Material is not cached, use GetMaterial if caching is desired.
            </summary>
            <param name="filePath">Path to an image file</param>
            <param name="shader">Shader to use</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateMaterial(System.String,UnityEngine.Material)">
            <summary>
            Creates a Material using the specified image and Material as a source.
            The Material is not cached, use GetMaterial if caching is desired.
            </summary>
            <param name="filePath">Path to an image file</param>
            <param name="source">Source Material to copy</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetTexture(System.String,System.String)">
            <summary>
            Creates a Texture2D from an image or asset file.
            Loads Texture2D from cache if created previously.
            </summary>
            <param name="path">Path to an image or asset</param>
            /// <param name="fileName">Name of an image or asset file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetTexture(System.String)">
            <summary>
            Creates a Texture2D from an image or asset file.
            Loads Texture2D from cache if created previously.
            </summary>
            <param name="filePath">Path to an image or asset file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateTexture(System.String)">
            <summary>
            Creates a Texture2D from an image or asset file.
            The Texture2D is not cached, use GetTexture if caching is desired.
            </summary>
            <param name="filePath">Path to an image file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateTexture(System.Byte[])">
            <summary>
            Creates a Texture2D from a byte array.
            The Texture2D is not cached, use GetTexture if caching is desired.
            </summary>
            <param name="imageBytes">Byte array to load image from</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetAudioClip(System.String,System.String)">
            <summary>
            Creates an AudioClip from an audio file.
            Loads AudioClip from cache if created previously. Note that the same cached AudioClip can't be played several times simultaneously.
            </summary>
            <param name="path">Path to an audio file</param>
            <param name="fileName">Name of an audio file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetAudioClip(System.String)">
            <summary>
            Creates an AudioClip from an audio file.
            Loads AudioClip from cache if created previously. Note that the same cached AudioClip can't be played several times simultaneously.
            </summary>
            <param name="filePath">Path to an audio file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateAudioClip(System.String,System.String)">
            <summary>
            Creates an AudioClip from an audio file.
            The AudioClip is not cached, use GetAudioClip is caching is desired.
            </summary>
            <param name="path">Path to an audio file</param>
            <param name="fileName">Name of an audio file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateAudioClip(System.String)">
            <summary>
            Creates an AudioClip from an audio file.
            The AudioClip is not cached, use GetAudioClip is caching is desired.
            </summary>
            <param name="filePath">Path to an audio file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.ExtractResource(System.String)">
            <summary>
            Creates a byte array from a file.
            </summary>
            <param name="filename">Name of a file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.LoadAssetSync``1(System.String)">
            <summary>
            Loads an object from an asset file.
            </summary>
            <typeparam name="T">Type of the object</typeparam>
            <param name="name">Name of the asset file</param>
            <returns></returns>
        </member>
    </members>
</doc>
