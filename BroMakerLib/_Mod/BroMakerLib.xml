<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BroMakerLib</name>
    </assembly>
    <members>
        <member name="P:BroMakerLib.Abilities.Ability`1.PositionOffset">
            <summary>
            Offset position from <see cref="F:BroMakerLib.Abilities.Ability`1.owner"/>
            </summary>
        </member>
        <member name="T:BroMakerLib.Abilities.CharacterAbility">
            <summary>
            Base class for Ability made for Characters (<see cref="T:TestVanDammeAnim"/>)
            </summary>
        </member>
        <member name="T:BroMakerLib.Abilities.Characters.SpawnDrone">
            <summary>
            Spawn a drone. DON'T USE, drones are bugged and crashes could happen
            </summary>
        </member>
        <member name="T:BroMakerLib.Abilities.Characters.ThrowGrenade">
            <summary>
            Throw a grenade like Rambro special
            </summary>
        </member>
        <member name="T:BroMakerLib.Abilities.Characters.Jetpack">
            <summary>
            Use a Jetpack. Not fully functionnal for some reason
            </summary>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.GetVariantValue``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Gets the appropriate value from a variant list based on the variant index.
            Returns the value at variantIndex if available, otherwise returns the first item, or default(T) if list is empty.
            </summary>
            <typeparam name="T">Type of the list elements</typeparam>
            <param name="list">The variant list</param>
            <param name="variantIndex">The desired variant index</param>
            <returns>The appropriate value for the variant</returns>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.IsBoss(Unit)">
            <summary>
            Determines if the specified unit is a boss
            </summary>
            <param name="unit">Unit to check</param>
            <returns>True if unit is a boss</returns>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.SetSpecialMaterials(System.Int32,System.Collections.Generic.List{UnityEngine.Material},UnityEngine.Vector2,System.Single)">
            <summary>
            Changes the specified players special materials
            </summary>
            <param name="playerNum"></param>
            <param name="specialMaterials">List of materials to set special to, if only one is specified, all icons will be set to it</param>
            <param name="offset">Offset to move all special icons horizontally or vertically</param>
            <param name="spacing">Spacing between special icons</param>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.SetSpecialMaterials(System.Int32,UnityEngine.Material,UnityEngine.Vector2,System.Single)">
            <summary>
            Changes the specified players special materials
            </summary>
            <param name="playerNum"></param>
            <param name="specialMaterial">Material to set special to, all icons will be set to it</param>
            <param name="offset">Offset to move all special icons horizontally or vertically</param>
            <param name="spacing">Spacing between special icons</param>
        </member>
        <member name="M:BroMakerLib.BroMakerUtilities.CreateGibPrefab(System.String,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector3,UnityEngine.Vector3,System.Boolean,DoodadGibsType,System.Single,System.Boolean,BloodColor,System.Single,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,UnityEngine.AudioClip[],System.Boolean)">
            <summary>
            Creates a Gib prefab. Be sure the Gib Holder is set to inactive or else your gibs will be destroyed.
            </summary>
            <param name="name">Name of GameObject</param>
            <param name="lowerLeftPixel">Lower left pixel of gib</param>
            <param name="pixelDimensions">Width and Height of gib</param>
            <param name="spriteWidth"></param>
            <param name="spriteHeight"></param>
            <param name="spriteOffset"></param>
            <param name="localPositionOffset">Sets the local position of the object which is applied as an offset to the spawn position</param>
            <param name="doesRotate"></param>
            <param name="gibType"></param>
            <param name="size"></param>
            <param name="hasBloodTrail"></param>
            <param name="color"></param>
            <param name="bloodyM"></param>
            <param name="shrink"></param>
            <param name="rotateFrames"></param>
            <param name="rotateAtRightAngles"></param>
            <param name="hasSmokeTrail"></param>
            <param name="smokeTrailBounces"></param>
            <param name="forceMultiplier"></param>
            <param name="startLife"></param>
            <param name="lifeM"></param>
            <param name="randomLifeM"></param>
            <param name="r"></param>
            <param name="rotationSpeedMultiplier"></param>
            <param name="bounceM"></param>
            <param name="frictionM"></param>
            <param name="drag"></param>
            <param name="randomiseGravityM"></param>
            <param name="gravityMrandomRange"></param>
            <param name="fallHitSound"></param>
            <param name="isOnFire"></param>
            <returns></returns>
        </member>
        <member name="T:BroMakerLib.CustomObjects.Projectiles.CustomGrenade">
            <summary>
            CustomGrenade has all the default functionality of the Grenade class, with extra methods to make creating custom grenades easier
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.spriteAutoLoad">
            <summary>
            Override Awake() and set this value to false to prevent the sprite from being loaded automatically
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.storedSprite">
            <summary>
            Stores the sprite that was loaded if automatic loading is enabled
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.CustomGrenadePrefabs">
            <summary>
            Stores all custom projectile prefabs that have been created to avoid having to recreate them.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.RanSetup">
            <summary>
            Tracks whether the prefab setup has been run or not.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.spriteFolder">
            <summary>
            Folder that contains your sprite image file. 
            Defaults to "projectiles". 
            Set this to "" if your grenades are in the same folder as your .dll
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.spriteFileName">
            <summary>
            Name of your image file that will be automatically loaded.
            Defaults to "nameofyourclass.png".
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.spriteDirectoryPath">
            <summary>
            Automatically gets set to the path to the folder your sprite is in.
            Don't set this manually.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.assemblyPath">
            <summary>
            Automatically gets set to the path to the folder your grenade's assembly is in.
            Don't set this manually.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.soundFolder">
            <summary>
            Folder that contains your grenade's sounds.
            Defaults to "sounds". 
            Set this to "" if your sounds are in the same folder as your .dll
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.soundPath">
            <summary>
            Automatically gets set to the path to the folder your grenade's sounds are in.
            Assumes they're in a folder called sounds
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.spritePixelDimensions">
            <summary>
            Size of one frame of your grenade. 
            By default this will be the whole image, but if your grenade has multiple frames, you will want to change this.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.spriteLowerLeftPixel">
            <summary>
            Sets the lower left corner of your sprite.
            Defaults to (0, heightofyourimage), which will include the whole image.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.spriteOffset">
            <summary>
            Sets the offset of your sprite from the game object.
            Defaults to (0, 0, 0).
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.spriteColor">
            <summary>
            Sets the sprite color.
            Defaults to white.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.defaultSoundHolder">
            <summary>
            Sets the SoundHolder of the grenade.
            Defaults to Rambro's Grenade's SoundHolder.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.Awake">
            <summary>
            You must override this function for automatic sprite loading to work.
            If you don't put any code in your Awake() function besides base.Awake(), the sprite loading will attempt to use the defaults to load your sprite.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.PrefabSetup">
            <summary>
            Runs one time after Awake() is called when the prefab is being created.
            Allows you to setup and store variables in the prefab to be reused by copies of this projectile.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.CreatePrefab``1">
            <summary>
            Creates a prefab with the default required components for a Grenade.
            </summary>
            <typeparam name="T">Type of your custom grenade class.</typeparam>
            <returns>The prefab of your custom grenade.</returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.CreatePrefab``1(System.Collections.Generic.List{System.Type})">
            <summary>
            Creates a prefab with the default required components for a Grenade along with the additional specified components.
            </summary>
            <param name="additionalComponents">Additional components to add to the prefab.</param>
            <typeparam name="T">Type of your custom grenade class.</typeparam>
            <returns>The prefab of your custom grenade.</returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomGrenade.SpawnGrenadeLocally(UnityEngine.MonoBehaviour,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Spawns a grenade locally and enables it after spawning.
            </summary>
            <param name="firedBy">The MonoBehaviour that threw this grenade.</param>
            <param name="x">The X position to spawn the grenade.</param>
            <param name="y">The Y position to spawn the grenade.</param>
            <param name="radius">The explosion radius of the grenade (passed to SetupGrenade but actual usage depends on grenade type).</param>
            <param name="force">The explosion force of the grenade (passed to SetupGrenade but actual usage depends on grenade type).</param>
            <param name="xI">The initial X velocity of the grenade.</param>
            <param name="yI">The initial Y velocity of the grenade.</param>
            <param name="playerNum">The player number who owns this grenade.</param>
            <param name="seed">Random seed for deterministic grenade behavior. Defaults to UnityEngine.Random.Range( 0, 10000 )</param>
            <returns>The spawned Grenade instance.</returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomPockettedSpecial.AddPockettedSpecial(TestVanDammeAnim,BroMakerLib.CustomObjects.Projectiles.CustomPockettedSpecial)">
            <summary>
            Gives a custom pocketted special to a bro
            </summary>
            <param name="character">Bro to receive the special</param>
            <param name="special">Instance of your custom pocketted special</param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomPockettedSpecial.ClearPockettedSpecials(System.Int32)">
            <summary>
            Clears all custom pocketted specials for a specific player
            </summary>
            <param name="playerNum"></param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomPockettedSpecial.UseSpecial(BroBase)">
            <summary>
            Override this to perform whatever action your pocketted special does, whether that be spawning a projectile or something else.
            </summary>
            <param name="bro">The bro who's using the pocketted special</param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomPockettedSpecial.SetSpecialMaterials(BroBase)">
            <summary>
            Override this to set the special material to the material of your custom pocketted special.
            I recommend using the SetSpecialMaterials method from BroMakerUtilities
            </summary>
            <param name="bro">The bro who has the pocketted special</param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomPockettedSpecial.RefreshAmmo">
            <summary>
            Override this to set whether the bro will have their special ammo reset to full after using this pocketted special
            </summary>
            <returns>True to have the ammo refreshed</returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomPockettedSpecial.UseThrowingAnimation">
            <summary>
            Override this to set what animation the bro will use while activating your pocketted special.
            </summary>
            <returns>If true, it will be the throwing animation, if false, it will be the flex animation</returns>
        </member>
        <member name="T:BroMakerLib.CustomObjects.Projectiles.CustomProjectile">
            <summary>
            CustomProjectile has all the default functionality of the Projectile class, with extra methods to make creating custom projectiles easier
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteAutoLoad">
            <summary>
            Override Awake() and set this value to false to prevent the sprite from being loaded automatically
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.sprite">
            <summary>
            Stores the sprite that was loaded if automatic loading is enabled
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.CustomProjectilePrefabs">
            <summary>
            Stores all custom projectile prefabs that have been created to avoid having to recreate them.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.RanSetup">
            <summary>
            Tracks whether the prefab setup has been run or not.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteFolder">
            <summary>
            Folder that contains your sprite image file. 
            Defaults to "projectiles". 
            Set this to "" if your sprite is in the same folder as your .dll
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteFileName">
            <summary>
            Name of your image file that will be automatically loaded.
            Defaults to "nameofyourclass.png".
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteDirectoryPath">
            <summary>
            Automatically gets set to the path to the folder your sprite is in.
            Don't set this manually.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.assemblyPath">
            <summary>
            Automatically gets set to the path to the folder your projectile's assembly is in.
            Don't set this manually.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.soundFolder">
            <summary>
            Folder that contains your projectile's sounds.
            Defaults to "sounds". 
            Set this to "" if your sounds are in the same folder as your .dll
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.soundPath">
            <summary>
            Automatically gets set to the path to the folder your projectile's sounds are in.
            Assumes they're in a folder called sounds
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spritePixelDimensions">
            <summary>
            Size of one frame of your projectile. 
            By default this will be the whole image, but if your projectile has multiple frames, you will want to change this.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteLowerLeftPixel">
            <summary>
            Sets the lower left corner of your sprite.
            Defaults to (0, heightofyourimage), which will include the whole image.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteWidth">
            <summary>
            Controls how wide your sprite appears in-game. This can be set to anything, regardless of the actual image size.
            Defaults to the same width as your image file.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteHeight">
            <summary>
            Controls how tall your sprite appears in-game. This can be set to anything, regardless of the actual image size.
            Defaults to the same height as your image file.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteOffset">
            <summary>
            Sets the offset of your sprite from the game object.
            Defaults to (0, 0, 0).
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.spriteColor">
            <summary>
            Sets the sprite color.
            Defaults to white.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.defaultSoundHolder">
            <summary>
            Sets the SoundHolder of the projectile.
            Defaults to Rambro's Bullet's SoundHolder.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.Awake">
            <summary>
            You must override this function for automatic sprite loading to work.
            If you don't put any code in your Awake() function besides base.Awake(), the sprite loading will attempt to use the defaults to load your sprite.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.PrefabSetup">
            <summary>
            Runs one time after Awake() is called when the prefab is being created.
            Allows you to setup and store variables in the prefab to be reused by copies of this projectile.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.CreatePrefab``1">
            <summary>
            Creates a prefab with the default required components for a Projectile.
            </summary>
            <typeparam name="T">Type of your custom projectile class.</typeparam>
            <returns>The prefab of your custom projectile.</returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.CreatePrefab``1(System.Collections.Generic.List{System.Type})">
            <summary>
            Creates a prefab with the default required components for a Projectile along with the additional specified components.
            </summary>
            <param name="additionalComponents">Additional components to add to the prefab.</param>
            <typeparam name="T">Type of your custom projectile class.</typeparam>
            <returns>The prefab of your custom projectile.</returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomProjectile.SpawnProjectileLocally(UnityEngine.MonoBehaviour,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            Spawns a projectile locally and enables it after spawning.
            </summary>
            <param name="FiredBy">The MonoBehaviour that fired this projectile.</param>
            <param name="x">The X position to spawn the projectile.</param>
            <param name="y">The Y position to spawn the projectile.</param>
            <param name="xI">The initial X velocity of the projectile.</param>
            <param name="yI">The initial Y velocity of the projectile.</param>
            <param name="playerNum">The player number who owns this projectile.</param>
            <param name="_zOffset">The Z-axis offset for the projectile spawn position.</param>
            <returns>The spawned Projectile instance.</returns>
        </member>
        <member name="T:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack">
            <summary>
            CustomSacehlPack has all the default functionality of the SachelPack class, with extra methods to make creating custom projectiles easier
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteAutoLoad">
            <summary>
            Override Awake() and set this value to false to prevent the sprite from being loaded automatically
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.sprite">
            <summary>
            Stores the sprite that was loaded if automatic loading is enabled
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.CustomSachelPackPrefabs">
            <summary>
            Stores all custom projectile prefabs that have been created to avoid having to recreate them.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.RanSetup">
            <summary>
            Tracks whether the prefab setup has been run or not.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteFolder">
            <summary>
            Folder that contains your sprite image file. 
            Defaults to "projectiles". 
            Set this to "" if your sprite is in the same folder as your .dll
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteFileName">
            <summary>
            Name of your image file that will be automatically loaded.
            Defaults to "nameofyourclass.png".
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteDirectoryPath">
            <summary>
            Automatically gets set to the path to the folder your sprite is in.
            Don't set this manually.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.assemblyPath">
            <summary>
            Automatically gets set to the path to the folder your projectile's assembly is in.
            Don't set this manually.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.soundFolder">
            <summary>
            Folder that contains your projectile's sounds.
            Defaults to "sounds". 
            Set this to "" if your sounds are in the same folder as your .dll
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.soundPath">
            <summary>
            Automatically gets set to the path to the folder your projectile's sounds are in.
            Assumes they're in a folder called sounds
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spritePixelDimensions">
            <summary>
            Size of one frame of your projectile. 
            By default this will be the whole image, but if your projectile has multiple frames, you will want to change this.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteLowerLeftPixel">
            <summary>
            Sets the lower left corner of your sprite.
            Defaults to (0, heightofyourimage), which will include the whole image.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteWidth">
            <summary>
            Controls how wide your sprite appears in-game. This can be set to anything, regardless of the actual image size.
            Defaults to the same width as your image file.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteHeight">
            <summary>
            Controls how tall your sprite appears in-game. This can be set to anything, regardless of the actual image size.
            Defaults to the same height as your image file.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteOffset">
            <summary>
            Sets the offset of your sprite from the game object.
            Defaults to (0, 0, 0).
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.spriteColor">
            <summary>
            Sets the sprite color.
            Defaults to white.
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.defaultSoundHolder">
            <summary>
            Sets the SoundHolder of the projectile.
            Defaults to Rambro's Bullet's SoundHolder.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.Awake">
            <summary>
            You must override this function for automatic sprite loading to work.
            If you don't put any code in your Awake() function besides base.Awake(), the sprite loading will attempt to use the defaults to load your sprite.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.PrefabSetup">
            <summary>
            Runs one time after Awake() is called when the prefab is being created.
            Allows you to setup and store variables in the prefab to be reused by copies of this projectile.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.CreatePrefab``1">
            <summary>
            Creates a prefab with the default required components for a Projectile.
            </summary>
            <typeparam name="T">Type of your custom projectile class.</typeparam>
            <returns>The prefab of your custom projectile.</returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.CreatePrefab``1(System.Collections.Generic.List{System.Type})">
            <summary>
            Creates a prefab with the default required components for a Projectile along with the additional specified components.
            </summary>
            <param name="additionalComponents">Additional components to add to the prefab.</param>
            <typeparam name="T">Type of your custom projectile class.</typeparam>
            <returns>The prefab of your custom projectile.</returns>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Projectiles.CustomSachelPack.SpawnProjectileLocally(UnityEngine.MonoBehaviour,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            Spawns a projectile locally and enables it after spawning.
            </summary>
            <param name="FiredBy">The MonoBehaviour that fired this projectile.</param>
            <param name="x">The X position to spawn the projectile.</param>
            <param name="y">The Y position to spawn the projectile.</param>
            <param name="xI">The initial X velocity of the projectile.</param>
            <param name="yI">The initial Y velocity of the projectile.</param>
            <param name="playerNum">The player number who owns this projectile.</param>
            <param name="_zOffset">The Z-axis offset for the projectile spawn position.</param>
            <returns>The spawned Projectile instance.</returns>
        </member>
        <member name="T:BroMakerLib.CustomObjects.ICustomProjectile">
            <summary>
            Custom projectile or grenade
            </summary>
        </member>
        <member name="F:BroMakerLib.CustomObjects.Bros.CustomHero.directoryPath">
            <summary>
            Contains the path to the directory that contains your custom bro's dll
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.UIOptions">
            <summary>
            Override this method to have UI options displayed for your custom hero underneath their name in the Custom Bros tab
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.HarmonyPatches(HarmonyLib.Harmony)">
            <summary>
            Override this method to add custom harmony patches to your custom hero
            </summary>
            <param name="harmony"></param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.PreloadAssets">
            <summary>
            Override this method to add your own assets to be preloaded when the game starts, to avoid lag when spawning as custom characters.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.PreloadSprites(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Preloads each sprite in the spritePaths list.
            </summary>
            <param name="directoryPath">Path to the directory containing the sprites</param>
            <param name="spritePaths">Sprites to load</param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.PreloadSounds(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Preloads each sound in the soundPaths list.
            </summary>
            <param name="directoryPath">Path to the directory containing the sound files</param>
            <param name="soundPaths">Sounds to load</param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.PrefabSetup">
            <summary>
            This method is called once after the prefab is created.
            
            IMPORTANT: Make sure if you override this you still call the base implementation.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.GetVariant">
            <summary>
            Override this to customize variant selection logic
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.SetupAdditionalSprites">
            <summary>
            Override this if you have additional sprites that need to be set up and showing immediately
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.SwitchVariant(System.Int32)">
            <summary>
            This method switches the current variant and changes all assigned parameters to the new variant's values
            </summary>
            <param name="variant">Variant to switch to</param>
        </member>
        <member name="T:BroMakerLib.CustomObjects.Bros.CustomHero.SaveableSettingAttribute">
            <summary>
            Marks a static field or property to be saved/loaded as a persistent setting.
            Only static members marked with this attribute will be included in settings serialization.
            </summary>
        </member>
        <member name="P:BroMakerLib.CustomObjects.Bros.CustomHero.SaveableSettingAttribute.Name">
            <summary>
            Gets or sets the custom name to use as the JSON key for this setting.
            If not specified, the member name will be used.
            </summary>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.SaveableSettingAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SaveableSettingAttribute class.
            </summary>
            <param name="name">Optional custom name to use as the JSON key. If null, the member name will be used.</param>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.SaveSettings">
            <summary>
            Saves all static fields and properties marked with [SaveableSetting] to a JSON file.
            The file will be saved to the instance's directoryPath with the name format: {BroName}settings.json
            </summary>
            <remarks>
            - Only saves non-null values
            - Automatically caches the custom bro information for better performance on subsequent calls
            - Caches the directory path for use with SaveAll()
            - If no saveable fields exist, no file will be created
            </remarks>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.LoadSettings">
            <summary>
            Loads all static fields and properties marked with [SaveableSetting] from a JSON file.
            The file is expected to be in the instance's directoryPath with the name format: {BroName}settings.json
            </summary>
            <remarks>
            - Silently returns if the settings file doesn't exist
            - Automatically handles type conversion including enums and complex types
            - Logs errors for individual fields that fail to load but continues with other fields
            - Caches the directory path for use with SaveAll()
            - Uses cached custom bro information for better performance on subsequent calls
            </remarks>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.SaveSettings``1">
            <summary>
            Saves settings for a specific custom bro type without requiring an instance.
            </summary>
            <typeparam name="T">The custom bro type whose settings should be saved</typeparam>
            <remarks>
            - If the directory path is not cached, retrieves it from BroMakerStorage
            - Only saves non-null values
            - Creates or overwrites the settings file in the appropriate directory
            </remarks>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.LoadSettings``1">
            <summary>
            Loads settings for a specific custom bro type without requiring an instance.
            </summary>
            <typeparam name="T">The custom bro type whose settings should be loaded</typeparam>
            <remarks>
            - If the directory path is not cached, retrieves it from BroMakerStorage
            - Silently returns if the settings file doesn't exist
            - Automatically handles type conversion including enums and complex types
            - Logs errors for individual fields that fail to load but continues with other fields
            </remarks>
        </member>
        <member name="M:BroMakerLib.CustomObjects.Bros.CustomHero.SaveAll">
            <summary>
            Saves settings for all custom bros that have been previously loaded or saved.
            This static method uses cached custom bro and directory information to save all settings without requiring instances.
            </summary>
            <remarks>
            - Only saves settings for custom bros that have been cached (i.e., SaveSettings or LoadSettings was called at least once)
            - Skips custom bros that don't have a cached directory path
            - Logs warnings for custom bros without cached directory paths
            - Logs success/error messages for each custom bro
            - Useful for application shutdown or periodic auto-saves
            </remarks>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.AssignNullVariables(BroMakerLib.CustomObjects.ICustomHero,BroBase)">
            <summary>
            Before base.Awake()
            </summary>
            <param name="hero"></param>
            <param name="character"></param>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.FixOtherComponentValues(BroMakerLib.CustomObjects.ICustomHero)">
            <summary>
            Before Awake
            </summary>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.GetTheOtherBroBaseComponent(BroMakerLib.CustomObjects.ICustomHero)">
            <summary>
            Before Awake
            </summary>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.SetupCustomHero(BroMakerLib.CustomObjects.ICustomHero)">
            <summary>
            Before Awake
            </summary>
            <param name="hero"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:BroMakerLib.ICustomHeroExtensions.SetSprites(BroMakerLib.CustomObjects.ICustomHero)">
            <summary>
            Loads and sets the sprite and gunsprite material for the given bro.
            </summary>
            <param name="bro">Bro to load sprites for</param>
        </member>
        <member name="F:BroMakerLib.Infos.CustomBroforceObjectInfo.name">
            <summary>
            Name of the Custom Object
            </summary>
        </member>
        <member name="M:BroMakerLib.PresetManager.GetHeroPreset(System.String)">
            <summary>
            Return hero Preset
            </summary>
            <param name="presetName"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:BroMakerLib.ResourcesController.Particle_AlphaBlend">
            <summary>
            Particles/Alpha Blended
            </summary>
        </member>
        <member name="P:BroMakerLib.ResourcesController.Unlit_DepthCutout">
            <summary>
            Unlit/Depth Cutout With ColouredImage
            </summary>
        </member>
        <member name="P:BroMakerLib.ResourcesController.Particle">
            <summary>
            Particle/Additive
            </summary>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetMaterial(System.String,System.String)">
            <summary>
            Creates a Material using the shader Unlit_DepthCutout.
            Loads Material from cache if created previously.
            </summary>
            <param name="path">Path to an image or asset</param>
            /// <param name="fileName">Name of an image or asset file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetMaterial(System.String)">
            <summary>
            Creates a Material using the shader Unlit_DepthCutout.
            Loads Material from cache if created previously.
            </summary>
            <param name="filePath">Path to an image or asset file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateMaterial(System.Byte[])">
            <summary>
            Creates a Material from an array of bytes using the shader Unlit_DepthCutout.
            The Material is not cached, use GetMaterial if caching is desired.
            </summary>
            <param name="imageBytes">Byte array to load image from</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateMaterial(System.String,UnityEngine.Shader)">
            <summary>
            Creates a Material using the specified image and shader.
            The Material is not cached, use GetMaterial if caching is desired.
            </summary>
            <param name="filePath">Path to an image file</param>
            <param name="shader">Shader to use</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateMaterial(System.String,UnityEngine.Material)">
            <summary>
            Creates a Material using the specified image and Material as a source.
            The Material is not cached, use GetMaterial if caching is desired.
            </summary>
            <param name="filePath">Path to an image file</param>
            <param name="source">Source Material to copy</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetTexture(System.String,System.String)">
            <summary>
            Creates a Texture2D from an image or asset file.
            Loads Texture2D from cache if created previously.
            </summary>
            <param name="path">Path to an image or asset</param>
            /// <param name="fileName">Name of an image or asset file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetTexture(System.String)">
            <summary>
            Creates a Texture2D from an image or asset file.
            Loads Texture2D from cache if created previously.
            </summary>
            <param name="filePath">Path to an image or asset file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateTexture(System.String)">
            <summary>
            Creates a Texture2D from an image or asset file.
            The Texture2D is not cached, use GetTexture if caching is desired.
            </summary>
            <param name="filePath">Path to an image file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateTexture(System.Byte[])">
            <summary>
            Creates a Texture2D from a byte array.
            The Texture2D is not cached, use GetTexture if caching is desired.
            </summary>
            <param name="imageBytes">Byte array to load image from</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetAudioClip(System.String,System.String)">
            <summary>
            Creates an AudioClip from an audio file.
            Loads AudioClip from cache if created previously.
            IMPORTANT: MP3 files will not load.
            </summary>
            <param name="path">Path to an audio file</param>
            <param name="fileName">Name of an audio file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.GetAudioClip(System.String)">
            <summary>
            Creates an AudioClip from an audio file.
            Loads AudioClip from cache if created previously.
            IMPORTANT: MP3 files will not load.
            </summary>
            <param name="filePath">Path to an audio file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateAudioClip(System.String,System.String)">
            <summary>
            Creates an AudioClip from an audio file.
            The AudioClip is not cached, use GetAudioClip is caching is desired.
            IMPORTANT: MP3 files will not load.
            </summary>
            <param name="path">Path to an audio file</param>
            <param name="fileName">Name of an audio file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.CreateAudioClip(System.String)">
            <summary>
            Creates an AudioClip from an audio file.
            The AudioClip is not cached, use GetAudioClip is caching is desired.
            IMPORTANT: MP3 files will not load.
            </summary>
            <param name="filePath">Path to an audio file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.ExtractResource(System.String)">
            <summary>
            Creates a byte array from a file.
            </summary>
            <param name="filename">Name of a file</param>
            <returns></returns>
        </member>
        <member name="M:BroMakerLib.ResourcesController.LoadAssetSync``1(System.String)">
            <summary>
            Loads an object from an asset file.
            </summary>
            <typeparam name="T">Type of the object</typeparam>
            <param name="name">Name of the asset file</param>
            <returns></returns>
        </member>
    </members>
</doc>
